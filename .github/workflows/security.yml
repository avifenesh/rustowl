name: Security & Memory Safety

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUSTC_BOOTSTRAP: 1

jobs:
  security-checks:
    name: Security & Memory Safety Analysis
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest, ubuntu-24.04-arm]
        include:
          - os: ubuntu-latest
            runner_os: Linux
          - os: ubuntu-24.04-arm
            runner_os: Linux
          - os: macos-latest
            runner_os: macOS
          - os: windows-latest
            runner_os: Windows
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain (from rust-toolchain.toml)
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: miri,rust-src,llvm-tools-preview
          # Automatically reads from rust-toolchain.toml

      - name: Install platform-specific targets
        shell: bash
        run: |
          # Install appropriate targets for the nightly version
          if [[ "${{ matrix.runner_os }}" == "Linux" ]]; then
            rustup target add x86_64-unknown-linux-gnu
            if [[ "${{ matrix.os }}" == "ubuntu-24.04-arm" ]]; then
              rustup target add aarch64-unknown-linux-gnu
            fi
          elif [[ "${{ matrix.runner_os }}" == "macOS" ]]; then
            rustup target add aarch64-apple-darwin x86_64-apple-darwin
          elif [[ "${{ matrix.runner_os }}" == "Windows" ]]; then
            rustup target add x86_64-pc-windows-msvc
          fi

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install system dependencies (Linux)
        if: matrix.runner_os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y valgrind

      - name: Install cargo tools
        run: |
          cargo install cargo-audit

      - name: Make scripts executable (Unix)
        if: runner.os != 'Windows'
        run: chmod +x scripts/*.sh

      - name: Run security checks
        shell: bash
        run: |
          set -e  # Exit on any command failure
          ./scripts/security.sh

      - name: Upload security artifacts (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: security-logs-${{ matrix.os }}
          path: |
            valgrind.log
            *.trace
            target/sanitizer/
          retention-days: 7
