name: Security & Memory Safety

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUSTUP_TOOLCHAIN: 1.87.0
  RUSTC_BOOTSTRAP: 1

jobs:
  security-checks:
    name: Security & Memory Safety Analysis
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest, ubuntu-24.04-arm]
        include:
          - os: ubuntu-latest
            valgrind: true
            runner_os: Linux
          - os: ubuntu-24.04-arm
            valgrind: true
            runner_os: Linux
          - os: macos-latest
            valgrind: false
            runner_os: macOS
          - os: windows-latest
            valgrind: false
            runner_os: Windows
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUSTUP_TOOLCHAIN }}
          components: rust-src,rustc-dev,llvm-tools,clippy,rustfmt

      - name: Install nightly toolchain (for Miri and sanitizers)
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: miri,rust-src

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install system dependencies (Linux)
        if: matrix.valgrind == true
        run: |
          sudo apt-get update
          sudo apt-get install -y valgrind

      - name: Install cargo tools
        run: |
          cargo install cargo-audit

      - name: Make scripts executable (Unix)
        if: runner.os != 'Windows'
        run: chmod +x scripts/*.sh

      - name: Run security checks
        shell: bash
        run: |
          if [[ "${{ matrix.runner_os }}" == "Windows" ]]; then
            # On Windows, use bash and skip Valgrind/DrMemory for now
            bash ./scripts/security.sh --no-valgrind --no-drmemory
          elif [[ "${{ matrix.valgrind }}" == "false" ]]; then
            # Skip Valgrind on macOS as it's not reliable
            ./scripts/security.sh --no-valgrind
          else
            # Run all available security tests
            ./scripts/security.sh
          fi
